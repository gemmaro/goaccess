# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the goaccess package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: goaccess 1.7\n"
"POT-Creation-Date: 2023-12-12 21:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: ../goaccess.1:1
#, no-wrap
msgid "goaccess"
msgstr ""

#. type: TH
#: ../goaccess.1:1
#, no-wrap
msgid "SEPTEMBER 2023"
msgstr ""

#. type: TH
#: ../goaccess.1:1
#, no-wrap
msgid "GNU+Linux"
msgstr ""

#. type: TH
#: ../goaccess.1:1
#, no-wrap
msgid "User Manuals"
msgstr ""

#. type: SH
#: ../goaccess.1:2
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../goaccess.1:4
msgid "goaccess - fast web log analyzer and interactive viewer."
msgstr ""

#. type: SH
#: ../goaccess.1:4
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../goaccess.1:7
msgid "B<goaccess [filename] [options...] [-c][-M][-H][-q][-d][...]>"
msgstr ""

#. type: SH
#: ../goaccess.1:7
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../goaccess.1:14
msgid ""
"B<goaccess> GoAccess is an open source real-time web log analyzer and "
"interactive viewer that runs in a I<terminal> in *nix systems or through "
"your I<browser.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:17
msgid ""
"It provides fast and valuable HTTP statistics for system administrators that "
"require a visual server report on the fly."
msgstr ""

#. type: Plain text
#: ../goaccess.1:20
msgid ""
"GoAccess parses the specified web log file and outputs the data to the X "
"terminal. Features include:"
msgstr ""

#. type: IP
#: ../goaccess.1:21
#, no-wrap
msgid "General Statistics:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:26
msgid ""
"This panel gives a summary of several metrics, such as the number of valid "
"and invalid requests, time taken to analyze the dataset, unique visitors, "
"requested files, static files (CSS, ICO, JPG, etc) HTTP referrers, 404s, "
"size of the parsed log file and bandwidth consumption."
msgstr ""

#. type: IP
#: ../goaccess.1:26
#, no-wrap
msgid "Unique visitors"
msgstr ""

#. type: Plain text
#: ../goaccess.1:31
msgid ""
"This panel shows metrics such as hits, unique visitors and cumulative "
"bandwidth per date. HTTP requests containing the same IP, the same date, and "
"the same user agent are considered a unique visitor. By default, it includes "
"web crawlers/spiders."
msgstr ""

#. type: Plain text
#: ../goaccess.1:37
msgid ""
"Optionally, date specificity can be set to the hour level using "
"I<--date-spec=hr> which will display dates such as 05/Jun/2016:16, or to the "
"minute level producing 05/Jun/2016:16:59. This is great if you want to track "
"your daily traffic at the hour or minute level."
msgstr ""

#. type: IP
#: ../goaccess.1:37
#, no-wrap
msgid "Requested files"
msgstr ""

#. type: Plain text
#: ../goaccess.1:41
msgid ""
"This panel displays the most requested (non-static) files on your web "
"server.  It shows hits, unique visitors, and percentage, along with the "
"cumulative bandwidth, protocol, and the request method used."
msgstr ""

#. type: IP
#: ../goaccess.1:41
#, no-wrap
msgid "Requested static files"
msgstr ""

#. type: Plain text
#: ../goaccess.1:45
msgid ""
"Lists the most frequently static files such as: JPG, CSS, SWF, JS, GIF, and "
"PNG file types, along with the same metrics as the last panel. Additional "
"static files can be added to the configuration file."
msgstr ""

#. type: IP
#: ../goaccess.1:45
#, no-wrap
msgid "404 or Not Found"
msgstr ""

#. type: Plain text
#: ../goaccess.1:49
msgid ""
"Displays the same metrics as the previous request panels, however, its data "
"contains all pages that were not found on the server, or commonly known as "
"404 status code."
msgstr ""

#. type: IP
#: ../goaccess.1:49
#, no-wrap
msgid "Hosts"
msgstr ""

#. type: Plain text
#: ../goaccess.1:52
msgid ""
"This panel has detailed information on the hosts themselves. This is great "
"for spotting aggressive crawlers and identifying who's eating your "
"bandwidth."
msgstr ""

#. type: Plain text
#: ../goaccess.1:58
msgid ""
"Expanding the panel can display more information such as host's reverse DNS "
"lookup result, country of origin and city. If the I<-a> argument is enabled, "
"a list of user agents can be displayed by selecting the desired IP address, "
"and then pressing ENTER."
msgstr ""

#. type: IP
#: ../goaccess.1:58
#, no-wrap
msgid "Operating Systems"
msgstr ""

#. type: Plain text
#: ../goaccess.1:62
msgid ""
"This panel will report which operating system the host used when it hit the "
"server. It attempts to provide the most specific version of each operating "
"system."
msgstr ""

#. type: IP
#: ../goaccess.1:62
#, no-wrap
msgid "Browsers"
msgstr ""

#. type: Plain text
#: ../goaccess.1:65
msgid ""
"This panel will report which browser the host used when it hit the "
"server. It attempts to provide the most specific version of each browser."
msgstr ""

#. type: IP
#: ../goaccess.1:65
#, no-wrap
msgid "Visit Times"
msgstr ""

#. type: Plain text
#: ../goaccess.1:68
msgid ""
"This panel will display an hourly report. This option displays 24 data "
"points, one for each hour of the day."
msgstr ""

#. type: Plain text
#: ../goaccess.1:73
msgid ""
"Optionally, hour specificity can be set to the tenth of an hour level using "
"I<--hour-spec=min> which will display hours as 16:4 This is great if you "
"want to spot peaks of traffic on your server."
msgstr ""

#. type: IP
#: ../goaccess.1:73
#, no-wrap
msgid "Virtual Hosts"
msgstr ""

#. type: Plain text
#: ../goaccess.1:78
msgid ""
"This panel will display all the different virtual hosts parsed from the "
"access log. This panel is displayed if I<%v> is used within the log-format "
"string."
msgstr ""

#. type: IP
#: ../goaccess.1:78
#, no-wrap
msgid "Referrers URLs"
msgstr ""

#. type: Plain text
#: ../goaccess.1:85
msgid ""
"If the host in question accessed the site via another resource, or was "
"linked/diverted to you from another host, the URL they were referred from "
"will be provided in this panel. See `--ignore-panel` in your configuration "
"file to enable it.  I<disabled> by default."
msgstr ""

#. type: IP
#: ../goaccess.1:85
#, no-wrap
msgid "Referring Sites"
msgstr ""

#. type: Plain text
#: ../goaccess.1:88
msgid ""
"This panel will display only the host part but not the whole URL. The URL "
"where the request came from."
msgstr ""

#. type: IP
#: ../goaccess.1:88
#, no-wrap
msgid "Keyphrases"
msgstr ""

#. type: Plain text
#: ../goaccess.1:94
msgid ""
"It reports keyphrases used on Google search, Google cache, and Google "
"translate that have lead to your web server. At present, it only supports "
"Google search queries via HTTP. See `--ignore-panel` in your configuration "
"file to enable it.  I<disabled> by default."
msgstr ""

#. type: IP
#: ../goaccess.1:94
#, no-wrap
msgid "Geo Location"
msgstr ""

#. type: Plain text
#: ../goaccess.1:98
msgid ""
"Determines where an IP address is geographically located. Statistics are "
"broken down by continent and country. It needs to be compiled with "
"GeoLocation support."
msgstr ""

#. type: IP
#: ../goaccess.1:98
#, no-wrap
msgid "HTTP Status Codes"
msgstr ""

#. type: Plain text
#: ../goaccess.1:100
msgid "The values of the numeric status code to HTTP requests."
msgstr ""

#. type: IP
#: ../goaccess.1:100
#, no-wrap
msgid "ASN"
msgstr ""

#. type: Plain text
#: ../goaccess.1:103
msgid ""
"This panel displays ASN (Autonomous System Numbers) data for GeoIP2 and "
"legacy databases. Great for detecting malicious traffic and blocking "
"accordingly."
msgstr ""

#. type: IP
#: ../goaccess.1:103
#, no-wrap
msgid "Remote User (HTTP authentication)"
msgstr ""

#. type: Plain text
#: ../goaccess.1:109
msgid ""
"This is the userid of the person requesting the document as determined by "
"HTTP authentication. If the document is not password protected, this part "
"will be \"-\" just like the previous one. This panel is not enabled unless "
"I<%e> is given within the log-format variable."
msgstr ""

#. type: IP
#: ../goaccess.1:109
#, no-wrap
msgid "Cache Status"
msgstr ""

#. type: Plain text
#: ../goaccess.1:117
#, no-wrap
msgid ""
"If you are using caching on your server, you may be at the point where you\n"
"want to know if your request is being cached and served from the "
"cache. This\n"
"panel shows the cache status of the object the server served. This panel is "
"not\n"
"enabled unless\n"
"I<%C>\n"
"is given within the log-format variable. The status can be either\n"
" `MISS`, `BYPASS`, `EXPIRED`, `STALE`, `UPDATING`, `REVALIDATED` or `HIT`\n"
msgstr ""

#. type: IP
#: ../goaccess.1:117
#, no-wrap
msgid "MIME Types"
msgstr ""

#. type: Plain text
#: ../goaccess.1:125
msgid ""
"This panel specifies Media Types (formerly known as MIME types) and Media "
"Subtypes which will be assigned and listed underneath. This panel is not "
"enabled unless I<%M> is given within the log-format variable. See "
"https://www.iana.org/assignments/media-types/media-types.xhtml for more "
"details."
msgstr ""

#. type: IP
#: ../goaccess.1:125
#, no-wrap
msgid "Encryption Settings"
msgstr ""

#. type: Plain text
#: ../goaccess.1:130
msgid ""
"This panel shows the SSL/TLS protocol used along the Cipher Suites. This "
"panel is not enabled unless I<%K> is given within the log-format variable."
msgstr ""

#. type: Plain text
#: ../goaccess.1:135
msgid ""
"I<NOTE:> Optionally and if configured, all panels can display the average "
"time taken to serve the request."
msgstr ""

#. type: SH
#: ../goaccess.1:136
#, no-wrap
msgid "STORAGE"
msgstr ""

#. type: Plain text
#: ../goaccess.1:140
msgid ""
"There are three storage options that can be used with GoAccess. Choosing one "
"will depend on your environment and needs."
msgstr ""

#. type: TP
#: ../goaccess.1:140
#, no-wrap
msgid "Default Hash Tables"
msgstr ""

#. type: Plain text
#: ../goaccess.1:146
msgid ""
"In-memory storage provides better performance at the cost of limiting the "
"dataset size to the amount of available physical memory. GoAccess uses "
"in-memory hash tables. It has very good memory usage and pretty good "
"performance. This storage has support for on-disk persistence."
msgstr ""

#. type: SH
#: ../goaccess.1:146
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../goaccess.1:151
msgid ""
"Multiple options can be used to configure GoAccess. For a complete "
"up-to-date list of configure options, run I<./configure --help>"
msgstr ""

#. type: TP
#: ../goaccess.1:151
#, no-wrap
msgid "B<--enable-debug>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:154
msgid "Compile with debugging symbols and turn off compiler optimizations."
msgstr ""

#. type: TP
#: ../goaccess.1:154
#, no-wrap
msgid "B<--enable-utf8>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:157
msgid "Compile with wide character support. Ncursesw is required."
msgstr ""

#. type: TP
#: ../goaccess.1:157
#, no-wrap
msgid "B<--enable-geoip=E<lt>legacy|mmdbE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:164
msgid ""
"Compile with GeoLocation support. MaxMind's GeoIP is required.  I<legacy> "
"will utilize the original GeoIP databases.  I<mmdb> will utilize the "
"enhanced GeoIP2 databases."
msgstr ""

#. type: TP
#: ../goaccess.1:164
#, no-wrap
msgid "B<--with-getline>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:168
msgid ""
"Dynamically expands line buffer in order to parse full line requests instead "
"of using a fixed size buffer of 4096."
msgstr ""

#. type: TP
#: ../goaccess.1:168
#, no-wrap
msgid "B<--with-openssl>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:171
msgid "Compile GoAccess with OpenSSL support for its WebSocket server."
msgstr ""

#. type: SH
#: ../goaccess.1:171
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Plain text
#: ../goaccess.1:176
msgid ""
"The following options can be supplied to the command or specified in the "
"configuration file. If specified in the configuration file, long options "
"need to be used without prepending -- and without using the equal sign =."
msgstr ""

#. type: SS
#: ../goaccess.1:176
#, no-wrap
msgid "LOG/DATE/TIME FORMAT"
msgstr ""

#. type: TP
#: ../goaccess.1:178
#, no-wrap
msgid "B<--time-format=E<lt>timeformatE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:183
msgid ""
"The time-format variable followed by a space, specifies the log format time "
"containing either a name of a predefined format (see options below) or any "
"combination of regular characters and special format specifiers."
msgstr ""

#. type: Plain text
#: ../goaccess.1:186
msgid ""
"They all begin with a percentage (%) sign. See `man strftime`.  I<%T or "
"%H:%M:%S.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:193
msgid ""
"Note that if a timestamp is given in microseconds, I<%f> must be used as "
"time-format.  If the timestamp is given in milliseconds I<%*> must be used "
"as time-format."
msgstr ""

#. type: TP
#: ../goaccess.1:193
#, no-wrap
msgid "B<--date-format=E<lt>dateformatE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:198
msgid ""
"The date-format variable followed by a space, specifies the log format time "
"containing either a name of a predefined format (see options below) or any "
"combination of regular characters and special format specifiers."
msgstr ""

#. type: Plain text
#: ../goaccess.1:201
msgid "They all begin with a percentage (%) sign. See `man strftime`.  I<%Y-%m-%d.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:209
msgid ""
"Note that if a timestamp is given in microseconds, I<%f> must be used as "
"date-format.  If the timestamp is given in milliseconds I<%*> must be used "
"as date-format."
msgstr ""

#. type: TP
#: ../goaccess.1:209
#, no-wrap
msgid "B<--datetime-format=E<lt>date_time_formatE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:215
msgid ""
"The date and time format combines the two variables into a single "
"option. This gives the ability to get the timezone from a request and "
"convert it to another timezone for output. See I<--tz=E<lt>timezoneE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:218
msgid ""
"They all begin with a percentage (%) sign. See `man strftime`. e.g., "
"I<%d/%b/%Y:%H:%M:%S %z.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:222
msgid ""
"Note that if --datetime-format is used, I<%x> must be passed in the "
"log-format variable to represent the date and time field."
msgstr ""

#. type: TP
#: ../goaccess.1:222
#, no-wrap
msgid "B<--log-format=E<lt>logformatE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:227
msgid ""
"The log-format variable followed by a space or I<\\et> for tab-delimited, "
"specifies the log format string."
msgstr ""

#. type: Plain text
#: ../goaccess.1:230
msgid ""
"Note that if there are spaces within the format, the string needs to be "
"enclosed in single/double quotes. Inner quotes need to be escaped."
msgstr ""

#. type: Plain text
#: ../goaccess.1:235
msgid ""
"In addition to specifying the raw log/date/time formats, for simplicity, any "
"of the following predefined log format names can be supplied to the "
"log/date/time-format variables. GoAccess can also handle one predefined name "
"in one variable and another predefined name in another variable."
msgstr ""

#. type: Plain text
#: ../goaccess.1:248
#, no-wrap
msgid ""
"  COMBINED     - Combined Log Format,\n"
"  VCOMBINED    - Combined Log Format with Virtual Host,\n"
"  COMMON       - Common Log Format,\n"
"  VCOMMON      - Common Log Format with Virtual Host,\n"
"  W3C          - W3C Extended Log File Format,\n"
"  SQUID        - Native Squid Log Format,\n"
"  CLOUDFRONT   - Amazon CloudFront Web Distribution,\n"
"  CLOUDSTORAGE - Google Cloud Storage,\n"
"  AWSELB       - Amazon Elastic Load Balancing,\n"
"  AWSS3        - Amazon Simple Storage Service (S3)\n"
"  AWSALB       - Amazon Application Load Balancer\n"
"  CADDY        - Caddy's JSON Structured format\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:253 ../goaccess.1:1054
msgid ""
"I<Note:> Piping data into GoAccess won't prompt a log/date/time "
"configuration dialog, you will need to previously define it in your "
"configuration file or in the command line."
msgstr ""

#. type: SS
#: ../goaccess.1:253
#, no-wrap
msgid "USER INTERFACE OPTIONS"
msgstr ""

#. type: TP
#: ../goaccess.1:255
#, no-wrap
msgid "B<-c --config-dialog>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:259
msgid ""
"Prompt log/time/date configuration window on program start. Only when curses "
"is initialized."
msgstr ""

#. type: TP
#: ../goaccess.1:259
#, no-wrap
msgid "B<-i --hl-header>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:262
msgid "Color highlight active terminal panel."
msgstr ""

#. type: TP
#: ../goaccess.1:262
#, no-wrap
msgid "B<-m --with-mouse>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:265
msgid "Enable mouse support on main terminal dashboard."
msgstr ""

#. type: TP
#: ../goaccess.1:265
#, no-wrap
msgid "B<---color=E<lt>fg:bg[attrs, PANEL]E<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:268
msgid "Specify custom colors for the terminal output."
msgstr ""

#. type: Plain text
#: ../goaccess.1:271
#, no-wrap
msgid ""
"I<Color Syntax>\n"
"  DEFINITION space/tab colorFG#:colorBG# [attributes,PANEL]\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:274
#, no-wrap
msgid ""
" FG# = foreground color [-1...255] (-1 = default term color)\n"
" BG# = background color [-1...255] (-1 = default term color)\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:282
msgid ""
"Optionally, it is possible to apply color attributes (multiple attributes "
"are comma separated), such as: I<bold,> I<underline,> I<normal,> I<reverse,> "
"I<blink>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:286
msgid ""
"If desired, it is possible to apply custom colors per panel, that is, a "
"metric in the REQUESTS panel can be of color A, while the same metric in the "
"BROWSERS panel can be of color B."
msgstr ""

#. type: Plain text
#: ../goaccess.1:315
#, no-wrap
msgid ""
"I<Available color definitions:>\n"
"  COLOR_MTRC_HITS\n"
"  COLOR_MTRC_VISITORS\n"
"  COLOR_MTRC_DATA\n"
"  COLOR_MTRC_BW\n"
"  COLOR_MTRC_AVGTS\n"
"  COLOR_MTRC_CUMTS\n"
"  COLOR_MTRC_MAXTS\n"
"  COLOR_MTRC_PROT\n"
"  COLOR_MTRC_MTHD\n"
"  COLOR_MTRC_HITS_PERC\n"
"  COLOR_MTRC_HITS_PERC_MAX\n"
"  COLOR_MTRC_VISITORS_PERC\n"
"  COLOR_MTRC_VISITORS_PERC_MAX\n"
"  COLOR_PANEL_COLS\n"
"  COLOR_BARS\n"
"  COLOR_ERROR\n"
"  COLOR_SELECTED\n"
"  COLOR_PANEL_ACTIVE\n"
"  COLOR_PANEL_HEADER\n"
"  COLOR_PANEL_DESC\n"
"  COLOR_OVERALL_LBLS\n"
"  COLOR_OVERALL_VALS\n"
"  COLOR_OVERALL_PATH\n"
"  COLOR_ACTIVE_LABEL\n"
"  COLOR_BG\n"
"  COLOR_DEFAULT\n"
"  COLOR_PROGRESS\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:317
msgid "See configuration file for a sample color scheme."
msgstr ""

#. type: TP
#: ../goaccess.1:317
#, no-wrap
msgid "B<--color-scheme=E<lt>1|2|3E<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:326
msgid ""
"Choose among color schemes.  I<1> for the default grey scheme.  I<2> for the "
"green scheme.  I<3> for the Monokai scheme (shown only if terminal supports "
"256 colors)."
msgstr ""

#. type: TP
#: ../goaccess.1:326
#, no-wrap
msgid "B<--crawlers-only>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:329
msgid "Parse and display only crawlers (bots)."
msgstr ""

#. type: TP
#: ../goaccess.1:329
#, no-wrap
msgid "B<--html-custom-css=E<lt>path/custom.cssE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:332
msgid "Specifies a custom CSS file path to load in the HTML report."
msgstr ""

#. type: TP
#: ../goaccess.1:332
#, no-wrap
msgid "B<--html-custom-js=E<lt>path/custom.jsE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:335
msgid "Specifies a custom JS file path to load in the HTML report."
msgstr ""

#. type: TP
#: ../goaccess.1:335
#, no-wrap
msgid "B<--html-report-title=E<lt>titleE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:338
msgid "Set HTML report page title and header."
msgstr ""

#. type: TP
#: ../goaccess.1:338
#, no-wrap
msgid "B<--html-refresh=E<lt>secsE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:342
msgid ""
"Refresh the HTML report every X seconds. The value has to be between 1 and "
"60 seconds. The default is set to refresh the HTML report every 1 second."
msgstr ""

#. type: TP
#: ../goaccess.1:342
#, no-wrap
msgid "B<--html-prefs=E<lt>JSONE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:347
msgid ""
"Set HTML report default preferences. Supply a valid JSON object containing "
"the HTML preferences. It allows the ability to customize each panel "
"plot. See example below."
msgstr ""

#. type: Plain text
#: ../goaccess.1:350
msgid ""
"I<Note:> The JSON object passed needs to be a one line JSON string. For "
"instance,"
msgstr ""

#. type: Plain text
#: ../goaccess.1:353
#, no-wrap
msgid "--html-prefs='{\"theme\":\"bright\",\"perPage\":5,\"layout\":\"horizontal\",\"showTables\":true,\"visitors\":{\"plot\":{\"chartType\":\"bar\"}}}'\n"
msgstr ""

#. type: TP
#: ../goaccess.1:354
#, no-wrap
msgid "B<--json-pretty-print>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:357
msgid "Format JSON output using tabs and newlines."
msgstr ""

#. type: Plain text
#: ../goaccess.1:361
msgid ""
"I<Note:> This is not recommended when outputting a real-time HTML report "
"since the WebSocket payload will much much larger."
msgstr ""

#. type: TP
#: ../goaccess.1:361
#, no-wrap
msgid "B<--max-items=E<lt>numberE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:365
msgid ""
"The maximum number of items to display per panel. The maximum can be a "
"number between 1 and n."
msgstr ""

#. type: Plain text
#: ../goaccess.1:369
msgid ""
"I<Note:> Only the CSV and JSON output allow a maximum number greater than "
"the default value of 366 (or 50 in the real-time HTML output) items per "
"panel."
msgstr ""

#. type: TP
#: ../goaccess.1:369
#, no-wrap
msgid "B<--no-color>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:373
msgid ""
"Turn off colored output. This is the default output on terminals that do not "
"support colors."
msgstr ""

#. type: TP
#: ../goaccess.1:373
#, no-wrap
msgid "B<--no-column-names>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:377
msgid ""
"Don't write column names in the terminal output. By default, it displays "
"column names for each available metric in every panel."
msgstr ""

#. type: TP
#: ../goaccess.1:377
#, no-wrap
msgid "B<--no-csv-summary>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:380
msgid "Disable summary metrics on the CSV output."
msgstr ""

#. type: TP
#: ../goaccess.1:380
#, no-wrap
msgid "B<--no-progress>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:383
msgid "Disable progress metrics [total requests/requests per second]."
msgstr ""

#. type: TP
#: ../goaccess.1:383
#, no-wrap
msgid "B<--no-tab-scroll>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:387
msgid ""
"Disable scrolling through panels when TAB is pressed or when a panel is "
"selected using a numeric key."
msgstr ""

#. type: TP
#: ../goaccess.1:387
#, no-wrap
msgid "B<--no-html-last-updated>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:390
msgid "Do not show the last updated field displayed in the HTML generated report."
msgstr ""

#. type: TP
#: ../goaccess.1:390
#, no-wrap
msgid "B<--no-parsing-spinner>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:393
msgid "Do now show the progress metrics and parsing spinner."
msgstr ""

#. type: TP
#: ../goaccess.1:393
#, no-wrap
msgid "B<--tz=E<lt>timezoneE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:405
msgid ""
"Outputs the report date/time data in the given timezone. Note that it uses "
"the canonical timezone name. e.g., I<Europe/Berlin> or I<America/Chicago> or "
"I<Africa/Cairo> If an invalid timezone name is given, the output will be in "
"GMT. See I<--datetime-format> in order to properly specify a timezone in the "
"date/time format."
msgstr ""

#. type: SS
#: ../goaccess.1:405
#, no-wrap
msgid "SERVER OPTIONS"
msgstr ""

#. type: Plain text
#: ../goaccess.1:415
msgid ""
"I<Note> This is just a WebSocket server to provide the raw real-time data.  "
"It is not a WebServer itself. To access your reports html file, you will "
"still need your own HTTP server, place the generated report in it's document "
"root dir and open the html file in your browser. The browser will then open "
"another WebSocket-connection to the ws-server you may setup here, to keep "
"the dashboard up-to-date."
msgstr ""

#. type: TP
#: ../goaccess.1:415
#, no-wrap
msgid "B<--addr>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:418
msgid "Specify IP address to bind the server to. Otherwise it binds to 0.0.0.0."
msgstr ""

#. type: Plain text
#: ../goaccess.1:421
msgid ""
"Usually there is no need to specify the address, unless you intentionally "
"would like to bind the server to a different address within your server."
msgstr ""

#. type: TP
#: ../goaccess.1:421
#, no-wrap
msgid "B<--daemonize>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:424
msgid "Run GoAccess as daemon (only if B<--real-time-html enabled).>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:427
msgid ""
"Note: It's important to make use of absolute paths across GoAccess' "
"configuration."
msgstr ""

#. type: TP
#: ../goaccess.1:427
#, no-wrap
msgid "B<--user-name=E<lt>usernameE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:430
msgid "Run GoAccess as the specified user."
msgstr ""

#. type: Plain text
#: ../goaccess.1:436
msgid ""
"Note: It's important to ensure the user or the users' group can access the "
"input and output files as well as any other files needed.  Other groups the "
"user belongs to will be ignored.  As such it's advised to run GoAccess "
"behind a SSL proxy as it's unlikely this user can access the SSL "
"certificates."
msgstr ""

#. type: TP
#: ../goaccess.1:436
#, no-wrap
msgid "B<--origin=E<lt>urlE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:439
msgid ""
"Ensure clients send the specified origin header upon the WebSocket "
"handshake."
msgstr ""

#. type: TP
#: ../goaccess.1:439
#, no-wrap
msgid "B<--pid-file=E<lt>path/goaccess.pidE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:442
msgid "Write the daemon PID to a file when used along the --daemonize option."
msgstr ""

#. type: TP
#: ../goaccess.1:442
#, no-wrap
msgid "B<--port=E<lt>portE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:446
msgid ""
"Specify the port to use. By default GoAccess' WebSocket server listens on "
"port 7890."
msgstr ""

#. type: TP
#: ../goaccess.1:446
#, no-wrap
msgid "B<--real-time-html>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:449
msgid "Enable real-time HTML output."
msgstr ""

#. type: Plain text
#: ../goaccess.1:452
msgid ""
"GoAccess uses its own WebSocket server to push the data from the server to "
"the client. See http://gwsocket.io for more details how the WebSocket server "
"works."
msgstr ""

#. type: TP
#: ../goaccess.1:452
#, no-wrap
msgid "B<--ws-url=E<lt>[scheme://]url[:port]E<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:456
msgid ""
"URL to which the WebSocket server responds. This is the URL supplied to the "
"WebSocket constructor on the client side."
msgstr ""

#. type: Plain text
#: ../goaccess.1:464
msgid ""
"Optionally, it is possible to specify the WebSocket URI scheme, such as "
"I<ws://> or I<wss://> for unencrypted and encrypted connections. e.g., "
"I<wss://goaccess.io>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:469
msgid ""
"If GoAccess is running behind a proxy, you could set the client side to "
"connect to a different port by specifying the host followed by a colon and "
"the port.  e.g., I<goaccess.io:9999>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:473
msgid ""
"By default, it will attempt to connect to the generated report's "
"hostname. If GoAccess is running on a remote server, the host of the remote "
"server should be specified here. Also, make sure it is a valid host and NOT "
"an http address."
msgstr ""

#. type: TP
#: ../goaccess.1:473
#, no-wrap
msgid "B<--ping-interval=E<lt>secsE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:477
msgid ""
"Enable WebSocket ping with specified interval in seconds. This helps prevent "
"idle connections getting disconnected."
msgstr ""

#. type: TP
#: ../goaccess.1:477
#, no-wrap
msgid "B<--fifo-in=E<lt>path/fileE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:480
msgid "Creates a named pipe (FIFO) that reads from on the given path/file."
msgstr ""

#. type: TP
#: ../goaccess.1:480
#, no-wrap
msgid "B<--fifo-out=E<lt>path/fileE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:483
msgid "Creates a named pipe (FIFO) that writes to the given path/file."
msgstr ""

#. type: TP
#: ../goaccess.1:483
#, no-wrap
msgid "B<--ssl-cert=E<lt>cert.crtE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:487
msgid ""
"Path to TLS/SSL certificate. In order to enable TLS/SSL support, GoAccess "
"requires that --ssl-cert and --ssl-key are used."
msgstr ""

#. type: Plain text
#: ../goaccess.1:489 ../goaccess.1:495
msgid "Only if configured using --with-openssl"
msgstr ""

#. type: TP
#: ../goaccess.1:489
#, no-wrap
msgid "B<--ssl-key=E<lt>priv.keyE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:493
msgid ""
"Path to TLS/SSL private key. In order to enable TLS/SSL support, GoAccess "
"requires that --ssl-cert and --ssl-key are used."
msgstr ""

#. type: SS
#: ../goaccess.1:495
#, no-wrap
msgid "FILE OPTIONS"
msgstr ""

#. type: TP
#: ../goaccess.1:497
#, no-wrap
msgid "B<->"
msgstr ""

#. type: Plain text
#: ../goaccess.1:500
msgid "The log file to parse is read from stdin."
msgstr ""

#. type: TP
#: ../goaccess.1:500
#, no-wrap
msgid "B<-f --log-file=E<lt>logfileE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:504
msgid ""
"Specify the path to the input log file. If set in the config file, it will "
"take priority over -f from the command line."
msgstr ""

#. type: TP
#: ../goaccess.1:504
#, no-wrap
msgid "B<-S --log-size=E<lt>bytesE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:508
msgid ""
"Specify the log size in bytes. This is useful when piping in logs for "
"processing in which the log size can be explicitly set."
msgstr ""

#. type: TP
#: ../goaccess.1:508
#, no-wrap
msgid "B<-l --debug-file=E<lt>debugfileE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:511
msgid "Send all debug messages to the specified file."
msgstr ""

#. type: TP
#: ../goaccess.1:511
#, no-wrap
msgid "B<-p --config-file=E<lt>configfileE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:515
msgid ""
"Specify a custom configuration file to use. If set, it will take priority "
"over the global configuration file (if any)."
msgstr ""

#. type: TP
#: ../goaccess.1:515
#, no-wrap
msgid "B<--external-assets>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:523
msgid ""
"Output HTML assets to external JS/CSS files. Great if you are setting up "
"Content Security Policy (CSP). This will create two separate files, "
"I<goaccess.js> and I<goaccess.css> , in the same directory as your "
"report.html file."
msgstr ""

#. type: TP
#: ../goaccess.1:523
#, no-wrap
msgid "B<--invalid-requests=E<lt>filenameE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:526
msgid "Log invalid requests to the specified file."
msgstr ""

#. type: TP
#: ../goaccess.1:526
#, no-wrap
msgid "B<--unknowns-log=E<lt>filenameE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:529
msgid "Log unknown browsers and OSs to the specified file."
msgstr ""

#. type: TP
#: ../goaccess.1:529
#, no-wrap
msgid "B<--no-global-config>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:535
msgid ""
"Do not load the global configuration file. This directory should normally be "
"/usr/local/etc, unless specified with I<--sysconfdir=/dir.> See --dcf option "
"for finding the default configuration file."
msgstr ""

#. type: SS
#: ../goaccess.1:535
#, no-wrap
msgid "PARSE OPTIONS"
msgstr ""

#. type: TP
#: ../goaccess.1:537
#, no-wrap
msgid "B<-a --agent-list>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:541
msgid ""
"Enable a list of user-agents by host. For faster parsing, do not enable this "
"flag."
msgstr ""

#. type: TP
#: ../goaccess.1:541
#, no-wrap
msgid "B<-d --with-output-resolver>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:544
msgid "Enable IP resolver on HTML|JSON output."
msgstr ""

#. type: TP
#: ../goaccess.1:544
#, no-wrap
msgid "B<-e --exclude-ip=E<lt>IP|IP-rangeE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:548
msgid ""
"Exclude an IPv4 or IPv6 from being counted.  Ranges can be included as well "
"using a dash in between the IPs (start-end)."
msgstr ""

#. type: Plain text
#: ../goaccess.1:554
#, no-wrap
msgid ""
"I<Examples:>\n"
"  exclude-ip 127.0.0.1\n"
"  exclude-ip 192.168.0.1-192.168.0.100\n"
"  exclude-ip ::1\n"
"  exclude-ip 0:0:0:0:0:ffff:808:804-0:0:0:0:0:ffff:808:808\n"
msgstr ""

#. type: TP
#: ../goaccess.1:554
#, no-wrap
msgid "B<-H --http-protocol=E<lt>yes|noE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:558
msgid ""
"Set/unset HTTP request protocol. This will create a request key containing "
"the request protocol + the actual request."
msgstr ""

#. type: TP
#: ../goaccess.1:558
#, no-wrap
msgid "B<-M --http-method=E<lt>yes|noE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:562
msgid ""
"Set/unset HTTP request method. This will create a request key containing the "
"request method + the actual request."
msgstr ""

#. type: TP
#: ../goaccess.1:562
#, no-wrap
msgid "B<-o --output=E<lt>path/file.[json|csv|html]E<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:566
msgid ""
"Write output to stdout given one of the following files and the "
"corresponding extension for the output format:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:570
#, no-wrap
msgid ""
"  /path/file.csv - Comma-separated values (CSV)\n"
"  /path/file.json - JSON (JavaScript Object Notation)\n"
"  /path/file.html - HTML\n"
msgstr ""

#. type: TP
#: ../goaccess.1:570
#, no-wrap
msgid "B<-q --no-query-string>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:574
msgid ""
"Ignore request's query string. i.e., www.google.com/page.htm?query =E<gt> "
"www.google.com/page.htm."
msgstr ""

#. type: Plain text
#: ../goaccess.1:578
msgid ""
"I<Note:> Removing the query string can greatly decrease memory consumption, "
"especially on timestamped requests."
msgstr ""

#. type: TP
#: ../goaccess.1:578
#, no-wrap
msgid "B<-r --no-term-resolver>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:581
msgid "Disable IP resolver on terminal output."
msgstr ""

#. type: TP
#: ../goaccess.1:581
#, no-wrap
msgid "B<--444-as-404>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:584
msgid "Treat non-standard status code 444 as 404."
msgstr ""

#. type: TP
#: ../goaccess.1:584
#, no-wrap
msgid "B<--4xx-to-unique-count>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:587
msgid "Add 4xx client errors to the unique visitors count."
msgstr ""

#. type: TP
#: ../goaccess.1:587
#, no-wrap
msgid "B<--anonymize-ip>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:594
msgid ""
"Anonymize the client IP address. The IP anonymization option sets the last "
"octet of IPv4 user IP addresses and the last 80 bits of IPv6 addresses to "
"zeros.  e.g., 192.168.20.100 =E<gt> 192.168.20.0 e.g., "
"2a03:2880:2110:df07:face:b00c::1 =E<gt> 2a03:2880:2110:df07::"
msgstr ""

#. type: TP
#: ../goaccess.1:594
#, no-wrap
msgid "B<--anonymize-level>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:597
msgid ""
"Specifies the anonymization levels: 1 =E<gt> default, 2 =E<gt> strong, 3 "
"=E<gt> pedantic."
msgstr ""

#. type: tbl table
#: ../goaccess.1:601
#, no-wrap
msgid "Bits-hidden"
msgstr ""

#. type: tbl table
#: ../goaccess.1:601
#, no-wrap
msgid "Level 1"
msgstr ""

#. type: tbl table
#: ../goaccess.1:601
#, no-wrap
msgid "Level 2"
msgstr ""

#. type: tbl table
#: ../goaccess.1:601
#, no-wrap
msgid "Level 3"
msgstr ""

#. type: tbl table
#: ../goaccess.1:604
#, no-wrap
msgid "B<IPv4>"
msgstr ""

#. type: tbl table
#: ../goaccess.1:604
#, no-wrap
msgid "8"
msgstr ""

#. type: tbl table
#: ../goaccess.1:604
#, no-wrap
msgid "16"
msgstr ""

#. type: tbl table
#: ../goaccess.1:604
#, no-wrap
msgid "24"
msgstr ""

#. type: tbl table
#: ../goaccess.1:607
#, no-wrap
msgid "B<IPv6>"
msgstr ""

#. type: tbl table
#: ../goaccess.1:607
#, no-wrap
msgid "64"
msgstr ""

#. type: tbl table
#: ../goaccess.1:607
#, no-wrap
msgid "80"
msgstr ""

#. type: tbl table
#: ../goaccess.1:607
#, no-wrap
msgid "96"
msgstr ""

#. type: TP
#: ../goaccess.1:610
#, no-wrap
msgid "B<--all-static-files>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:614
msgid ""
"Include static files that contain a query string. e.g., "
"/fonts/fontawesome-webfont.woff?v=4.0.3"
msgstr ""

#. type: TP
#: ../goaccess.1:614
#, no-wrap
msgid "B<--browsers-file=E<lt>pathE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:621
msgid ""
"By default GoAccess parses an \"essential/basic\" curated list of browsers & "
"crawlers. If you need to add additional browsers, use this option.  Include "
"an additional delimited list of browsers/crawlers/feeds etc.  See "
"config/browsers.list for an example or "
"https://raw.githubusercontent.com/allinurl/goaccess/master/config/browsers.list"
msgstr ""

#. type: TP
#: ../goaccess.1:621
#, no-wrap
msgid "B<--date-spec=E<lt>date|hr|minE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:625
msgid ""
"Set the date specificity to either date (default), hr to display hours or "
"min to display minutes appended to the date."
msgstr ""

#. type: Plain text
#: ../goaccess.1:629
msgid ""
"This is used in the visitors panel. It's useful for tracking visitors at the "
"hour level. For instance, an hour specificity would yield to display traffic "
"as 18/Dec/2010:19 or minute specificity 18/Dec/2010:19:59."
msgstr ""

#. type: TP
#: ../goaccess.1:629
#, no-wrap
msgid "B<--double-decode>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:632
msgid ""
"Decode double-encoded values. This includes, user-agent, request, and "
"referrer."
msgstr ""

#. type: TP
#: ../goaccess.1:632
#, no-wrap
msgid "B<--enable-panel=E<lt>PANELE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:635
msgid "Enable parsing and displaying the given panel."
msgstr ""

#. type: Plain text
#: ../goaccess.1:655 ../goaccess.1:701
#, no-wrap
msgid ""
"I<Available panels:>\n"
"  VISITORS\n"
"  REQUESTS\n"
"  REQUESTS_STATIC\n"
"  NOT_FOUND\n"
"  HOSTS\n"
"  OS\n"
"  BROWSERS\n"
"  VISIT_TIMES\n"
"  VIRTUAL_HOSTS\n"
"  REFERRERS\n"
"  REFERRING_SITES\n"
"  KEYPHRASES\n"
"  STATUS_CODES\n"
"  REMOTE_USER\n"
"  CACHE_STATUS\n"
"  GEO_LOCATION\n"
"  MIME_TYPE\n"
"  TLS_TYPE\n"
msgstr ""

#. type: TP
#: ../goaccess.1:655
#, no-wrap
msgid "B<--fname-as-vhost=E<lt>regexE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:661
msgid ""
"Use log filename(s) as virtual host(s). POSIX regex is passed to extract the "
"virtual host from the filename. e.g., I<--fname-as-vhost='[a-z]*.[a-z]*'> "
"can be used to extract awesome.com.log =E<gt> awesome.com."
msgstr ""

#. type: TP
#: ../goaccess.1:661
#, no-wrap
msgid "B<--hide-referrer=E<lt>NEEDLEE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:665
msgid ""
"Hide a referrer but still count it. Wild cards are allowed in the "
"needle. i.e., *.bing.com."
msgstr ""

#. type: TP
#: ../goaccess.1:665
#, no-wrap
msgid "B<--hour-spec=E<lt>hr|minE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:669
msgid ""
"Set the time specificity to either hour (default) or min to display the "
"tenth of an hour appended to the hour."
msgstr ""

#. type: Plain text
#: ../goaccess.1:672
msgid ""
"This is used in the time distribution panel. It's useful for tracking peaks "
"of traffic on your server at specific times."
msgstr ""

#. type: TP
#: ../goaccess.1:672
#, no-wrap
msgid "B<--ignore-crawlers>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:675
msgid "Ignore crawlers from being counted."
msgstr ""

#. type: TP
#: ../goaccess.1:675
#, no-wrap
msgid "B<--unknowns-as-crawlers>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:678
msgid "Classify unknown OS and browsers as crawlers."
msgstr ""

#. type: TP
#: ../goaccess.1:678
#, no-wrap
msgid "B<--ignore-panel=E<lt>PANELE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:681
msgid "Ignore parsing and displaying the given panel."
msgstr ""

#. type: TP
#: ../goaccess.1:701
#, no-wrap
msgid "B<--ignore-referrer=E<lt>referrerE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:708
msgid ""
"Ignore referrers from being counted. Wildcards allowed. e.g., "
"I<*.domain.com> I<ww?.domain.*>"
msgstr ""

#. type: TP
#: ../goaccess.1:708
#, no-wrap
msgid "B<--ignore-statics=E<lt>req|panelE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:711
msgid "Ignore static file requests."
msgstr ""

#. type: Plain text
#: ../goaccess.1:714
#, no-wrap
msgid ""
"I<req>\n"
"  Only ignore request from valid requests\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:717
#, no-wrap
msgid ""
"I<panels>\n"
"  Ignore request from panels.\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:719
#, no-wrap
msgid "  Note that it will count them towards the total number of requests\n"
msgstr ""

#. type: TP
#: ../goaccess.1:719
#, no-wrap
msgid "B<--ignore-status=E<lt>CODEE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:723
msgid ""
"Ignore parsing and displaying one or multiple status code(s). For multiple "
"status codes, use this option multiple times."
msgstr ""

#. type: TP
#: ../goaccess.1:723
#, no-wrap
msgid "B<--keep-last=E<lt>num_daysE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:726
msgid ""
"Keep the last specified number of days in storage. This will recycle the "
"storage tables. e.g., keep & show only the last 7 days."
msgstr ""

#. type: TP
#: ../goaccess.1:726
#, no-wrap
msgid "B<--no-ip-validation>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:734
msgid ""
"Disable client IP validation. Useful if IP addresses have been obfuscated "
"before being logged.  The log still needs to contain a placeholder for I<%h> "
"usually it's a resolved IP. e.g.  I<ord37s19-in-f14.1e100.net.>"
msgstr ""

#. type: TP
#: ../goaccess.1:734
#, no-wrap
msgid "B<--no-strict-status>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:739
msgid ""
"Disable HTTP status code validation. Some servers would record this value "
"only if a connection was established to the target and the target sent a "
"response.  Otherwise, it could be recorded as -."
msgstr ""

#. type: TP
#: ../goaccess.1:739
#, no-wrap
msgid "B<--num-tests=E<lt>numberE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:748
msgid ""
"Number of lines from the access log to test against the provided "
"log/date/time format. By default, the parser is set to test 10 lines. If set "
"to 0, the parser won't test any lines and will parse the whole access "
"log. If a line matches the given log/date/time format before it reaches "
"I<E<lt>numberE<gt>,> the parser will consider the log to be valid, otherwise "
"GoAccess will return EXIT_FAILURE and display the relevant error messages."
msgstr ""

#. type: TP
#: ../goaccess.1:748
#, no-wrap
msgid "B<--process-and-exit>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:753
msgid ""
"Parse log and exit without outputting data. Useful if we are looking to only "
"add new data to the on-disk database without outputting to a file or a "
"terminal."
msgstr ""

#. type: TP
#: ../goaccess.1:753
#, no-wrap
msgid "B<--real-os>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:756
msgid "Display real OS names. e.g, Windows XP, Snow Leopard."
msgstr ""

#. type: TP
#: ../goaccess.1:756
#, no-wrap
msgid "B<--sort-panel=E<lt>PANEL,FIELD,ORDERE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:760
msgid ""
"Sort panel on initial load. Sort options are separated by comma. Options are "
"in the form: PANEL,METRIC,ORDER"
msgstr ""

#. type: Plain text
#: ../goaccess.1:771
#, no-wrap
msgid ""
"I<Available metrics:>\n"
"  BY_HITS     - Sort by hits\n"
"  BY_VISITORS - Sort by unique visitors\n"
"  BY_DATA     - Sort by data\n"
"  BY_BW       - Sort by bandwidth\n"
"  BY_AVGTS    - Sort by average time served\n"
"  BY_CUMTS    - Sort by cumulative time served\n"
"  BY_MAXTS    - Sort by maximum time served\n"
"  BY_PROT     - Sort by http protocol\n"
"  BY_MTHD     - Sort by http method\n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:775
#, no-wrap
msgid ""
"I<Available orders:>\n"
"  ASC\n"
"  DESC\n"
msgstr ""

#. type: TP
#: ../goaccess.1:775
#, no-wrap
msgid "B<--static-file=E<lt>extensionE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:780
msgid "Add static file extension. e.g.: I<.mp3> Extensions are case sensitive."
msgstr ""

#. type: SS
#: ../goaccess.1:780
#, no-wrap
msgid "GEOLOCATION OPTIONS"
msgstr ""

#. type: TP
#: ../goaccess.1:782
#, no-wrap
msgid "B<-g --std-geoip>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:785
msgid "Standard GeoIP database for less memory usage."
msgstr ""

#. type: TP
#: ../goaccess.1:785
#, no-wrap
msgid "B<--geoip-database=E<lt>geofileE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:788
msgid "Specify path to GeoIP database file. i.e., GeoLiteCity.dat."
msgstr ""

#. type: Plain text
#: ../goaccess.1:795
msgid ""
"If using GeoIP2, you will need to download the GeoLite2 City or Country "
"database from MaxMind.com and use the option --geoip-database to specify the "
"database. You can also get updated database files for GeoIP legacy, you can "
"find these as GeoLite Legacy Databases from MaxMind.com. IPv4 and IPv6 files "
"are supported as well. For updated DB URLs, please see the default GoAccess "
"configuration file."
msgstr ""

#. type: Plain text
#: ../goaccess.1:798
msgid "I<Note:> --geoip-city-data is an alias of --geoip-database."
msgstr ""

#. type: SS
#: ../goaccess.1:798
#, no-wrap
msgid "OTHER OPTIONS"
msgstr ""

#. type: TP
#: ../goaccess.1:800
#, no-wrap
msgid "B<-h --help>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:803
msgid "The help."
msgstr ""

#. type: TP
#: ../goaccess.1:803
#, no-wrap
msgid "B<-s --storage>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:806
msgid "Display current storage method. i.e., B+ Tree, Hash."
msgstr ""

#. type: TP
#: ../goaccess.1:806
#, no-wrap
msgid "B<-V --version>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:809
msgid "Display version information and exit."
msgstr ""

#. type: TP
#: ../goaccess.1:809
#, no-wrap
msgid "B<--dcf>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:812
msgid "Display the path of the default config file when `-p` is not used."
msgstr ""

#. type: SS
#: ../goaccess.1:812
#, no-wrap
msgid "PERSISTENCE STORAGE OPTIONS"
msgstr ""

#. type: TP
#: ../goaccess.1:814
#, no-wrap
msgid "B<--persist>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:818
msgid ""
"Persist parsed data into disk. If database files exist, files will be "
"overwritten. This should be set to the first dataset. See examples below."
msgstr ""

#. type: TP
#: ../goaccess.1:818
#, no-wrap
msgid "B<--restore>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:824
msgid ""
"Load previously stored data from disk. If reading persisted data only, the "
"database files need to exist. See I<--persist> and examples below."
msgstr ""

#. type: TP
#: ../goaccess.1:824
#, no-wrap
msgid "B<--db-path=E<lt>dirE<gt>>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:829
msgid ""
"Path where the on-disk database files are stored. The default value is the "
"I</tmp> directory."
msgstr ""

#. type: SH
#: ../goaccess.1:830
#, no-wrap
msgid "CUSTOM LOG/DATE FORMAT"
msgstr ""

#. type: Plain text
#: ../goaccess.1:832
msgid "GoAccess can parse virtually any web log format."
msgstr ""

#. type: Plain text
#: ../goaccess.1:836
msgid ""
"Predefined options include, Common Log Format (CLF), Combined Log Format "
"(XLF/ELF), including virtual host, Amazon CloudFront (Download "
"Distribution), Google Cloud Storage and W3C format (IIS)."
msgstr ""

#. type: Plain text
#: ../goaccess.1:838
msgid "GoAccess allows any custom format string as well."
msgstr ""

#. type: Plain text
#: ../goaccess.1:844
msgid ""
"There are two ways to configure the log format.  The easiest is to run "
"GoAccess with I<-c> to prompt a configuration window. Otherwise, it can be "
"configured under ~/.goaccessrc or the %sysconfdir%."
msgstr ""

#. type: IP
#: ../goaccess.1:844
#, no-wrap
msgid "time-format"
msgstr ""

#. type: Plain text
#: ../goaccess.1:851
msgid ""
"The I<time-format> variable followed by a space, specifies the log format "
"time containing any combination of regular characters and special format "
"specifiers.  They all begin with a percentage (%) sign. See `man strftime`.  "
"I<%T or %H:%M:%S.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:863
msgid ""
"I<Note:> If a timestamp is given in microseconds, I<%f> must be used as "
"I<time-format> or I<%*> if the timestamp is given in milliseconds."
msgstr ""

#. type: IP
#: ../goaccess.1:863
#, no-wrap
msgid "date-format"
msgstr ""

#. type: Plain text
#: ../goaccess.1:870
msgid ""
"The I<date-format> variable followed by a space, specifies the log format "
"date containing any combination of regular characters and special format "
"specifiers. They all begin with a percentage (%) sign. See `man "
"strftime`. e.g., I<%Y-%m-%d.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:882
msgid ""
"I<Note:> If a timestamp is given in microseconds, I<%f> must be used as "
"I<date-format> or I<%*> if the timestamp is given in milliseconds."
msgstr ""

#. type: IP
#: ../goaccess.1:882
#, no-wrap
msgid "log-format"
msgstr ""

#. type: Plain text
#: ../goaccess.1:888
msgid ""
"The I<log-format> variable followed by a space or I<\\et> , specifies the "
"log format string."
msgstr ""

#. type: IP
#: ../goaccess.1:888
#, no-wrap
msgid "%x"
msgstr ""

#. type: Plain text
#: ../goaccess.1:896
msgid ""
"A date and time field matching the I<time-format> and I<date-format> "
"variables. This is used when given a timestamp or the date & time are "
"concatenated as a single string (e.g., 1501647332 or 20170801235000) instead "
"of the date and time being in two separated variables."
msgstr ""

#. type: IP
#: ../goaccess.1:896
#, no-wrap
msgid "%t"
msgstr ""

#. type: Plain text
#: ../goaccess.1:900
msgid "time field matching the I<time-format> variable."
msgstr ""

#. type: IP
#: ../goaccess.1:900
#, no-wrap
msgid "%d"
msgstr ""

#. type: Plain text
#: ../goaccess.1:904
msgid "date field matching the I<date-format> variable."
msgstr ""

#. type: IP
#: ../goaccess.1:904
#, no-wrap
msgid "%v"
msgstr ""

#. type: Plain text
#: ../goaccess.1:906
msgid "The canonical Server Name of the server serving the request (Virtual Host)."
msgstr ""

#. type: IP
#: ../goaccess.1:906
#, no-wrap
msgid "%e"
msgstr ""

#. type: Plain text
#: ../goaccess.1:909
msgid ""
"This is the userid of the person requesting the document as determined by "
"HTTP authentication."
msgstr ""

#. type: IP
#: ../goaccess.1:909
#, no-wrap
msgid "%C"
msgstr ""

#. type: Plain text
#: ../goaccess.1:911
msgid "The cache status of the object the server served."
msgstr ""

#. type: IP
#: ../goaccess.1:911
#, no-wrap
msgid "%h"
msgstr ""

#. type: Plain text
#: ../goaccess.1:913
msgid "host (the client IP address, either IPv4 or IPv6)"
msgstr ""

#. type: IP
#: ../goaccess.1:913
#, no-wrap
msgid "%r"
msgstr ""

#. type: Plain text
#: ../goaccess.1:917
msgid ""
"The request line from the client. This requires specific delimiters around "
"the request (as single quotes, double quotes, or anything else) to be "
"parsable. If not, we have to use a combination of special format specifiers "
"as %m %U %H."
msgstr ""

#. type: IP
#: ../goaccess.1:917
#, no-wrap
msgid "%q"
msgstr ""

#. type: Plain text
#: ../goaccess.1:919
msgid "The query string."
msgstr ""

#. type: IP
#: ../goaccess.1:919
#, no-wrap
msgid "%m"
msgstr ""

#. type: Plain text
#: ../goaccess.1:921
msgid "The request method."
msgstr ""

#. type: IP
#: ../goaccess.1:921
#, no-wrap
msgid "%U"
msgstr ""

#. type: Plain text
#: ../goaccess.1:923
msgid "The URL path requested."
msgstr ""

#. type: Plain text
#: ../goaccess.1:930
msgid ""
"I<Note:> If the query string is in %U, there is no need to use I<%q.> "
"However, if the URL path, does not include any query string, you may use "
"I<%q> and the query string will be appended to the request."
msgstr ""

#. type: IP
#: ../goaccess.1:930
#, no-wrap
msgid "%H"
msgstr ""

#. type: Plain text
#: ../goaccess.1:932
msgid "The request protocol."
msgstr ""

#. type: IP
#: ../goaccess.1:932
#, no-wrap
msgid "%s"
msgstr ""

#. type: Plain text
#: ../goaccess.1:934
msgid "The status code that the server sends back to the client."
msgstr ""

#. type: IP
#: ../goaccess.1:934
#, no-wrap
msgid "%b"
msgstr ""

#. type: Plain text
#: ../goaccess.1:936
msgid "The size of the object returned to the client."
msgstr ""

#. type: IP
#: ../goaccess.1:936
#, no-wrap
msgid "%R"
msgstr ""

#. type: Plain text
#: ../goaccess.1:938
msgid "The \"Referrer\" HTTP request header."
msgstr ""

#. type: IP
#: ../goaccess.1:938
#, no-wrap
msgid "%u"
msgstr ""

#. type: Plain text
#: ../goaccess.1:940
msgid "The user-agent HTTP request header."
msgstr ""

#. type: IP
#: ../goaccess.1:940
#, no-wrap
msgid "%K"
msgstr ""

#. type: Plain text
#: ../goaccess.1:942
msgid ""
"The TLS encryption settings chosen for the connection. (In Apache LogFormat: "
"%{SSL_PROTOCOL}x)"
msgstr ""

#. type: IP
#: ../goaccess.1:942
#, no-wrap
msgid "%k"
msgstr ""

#. type: Plain text
#: ../goaccess.1:944
msgid ""
"The TLS encryption settings chosen for the connection. (In Apache LogFormat: "
"%{SSL_CIPHER}x)"
msgstr ""

#. type: IP
#: ../goaccess.1:944
#, no-wrap
msgid "%M"
msgstr ""

#. type: Plain text
#: ../goaccess.1:946
msgid ""
"The MIME-type of the requested resource. (In Apache LogFormat: "
"%{Content-Type}o)"
msgstr ""

#. type: IP
#: ../goaccess.1:946
#, no-wrap
msgid "%D"
msgstr ""

#. type: Plain text
#: ../goaccess.1:948
msgid "The time taken to serve the request, in microseconds as a decimal number."
msgstr ""

#. type: IP
#: ../goaccess.1:948
#, no-wrap
msgid "%T"
msgstr ""

#. type: Plain text
#: ../goaccess.1:950
msgid ""
"The time taken to serve the request, in seconds with milliseconds "
"resolution."
msgstr ""

#. type: IP
#: ../goaccess.1:950
#, no-wrap
msgid "%L"
msgstr ""

#. type: Plain text
#: ../goaccess.1:952
msgid "The time taken to serve the request, in milliseconds as a decimal number."
msgstr ""

#. type: IP
#: ../goaccess.1:952
#, no-wrap
msgid "%n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:954
msgid "The time taken to serve the request, in nanoseconds."
msgstr ""

#. type: IP
#: ../goaccess.1:954
#, no-wrap
msgid "%^"
msgstr ""

#. type: Plain text
#: ../goaccess.1:956
msgid "Ignore this field."
msgstr ""

#. type: IP
#: ../goaccess.1:956
#, no-wrap
msgid "%~"
msgstr ""

#. type: Plain text
#: ../goaccess.1:958
msgid ""
"Move forward through the log string until a non-space (!isspace) char is "
"found."
msgstr ""

#. type: IP
#: ../goaccess.1:958
#, no-wrap
msgid "~h"
msgstr ""

#. type: Plain text
#: ../goaccess.1:960
msgid ""
"The host (the client IP address, either IPv4 or IPv6) in a X-Forwarded-For "
"(XFF) field."
msgstr ""

#. type: Plain text
#: ../goaccess.1:964
msgid ""
"It uses a special specifier which consists of a tilde before the host "
"specifier, followed by the character(s) that delimit the XFF field, which "
"are enclosed by curly braces. i.e., \"~h{, }"
msgstr ""

#. type: Plain text
#: ../goaccess.1:967
msgid ""
"For example, \"~h{, }\" is used in order to parse \"11.25.11.53, "
"17.68.33.17\" field which is delimited by a comma and a space (enclosed by "
"double quotes)."
msgstr ""

#. type: tbl table
#: ../goaccess.1:972
#, no-wrap
msgid "XFF field"
msgstr ""

#. type: tbl table
#: ../goaccess.1:972
#, no-wrap
msgid "specifier"
msgstr ""

#. type: tbl table
#: ../goaccess.1:975
#, no-wrap
msgid "B<\\[dq]192.1.2.3,>\\~192.68.33.17,\\~192.1.1.2\\[dq]"
msgstr ""

#. type: tbl table
#: ../goaccess.1:975
#, no-wrap
msgid "\\[dq]~h{, }\\[dq]"
msgstr ""

#. type: tbl table
#: ../goaccess.1:978
#, no-wrap
msgid "B<\\[dq]192.1.2.12\\[dq],\\~\\[dq]192.68.33.17\\[dq]>"
msgstr ""

#. type: tbl table
#: ../goaccess.1:978
#, no-wrap
msgid "~h{\\[dq], }"
msgstr ""

#. type: tbl table
#: ../goaccess.1:981
#, no-wrap
msgid "B<192.1.2.12,\\~192.68.33.17>"
msgstr ""

#. type: tbl table
#: ../goaccess.1:981
#, no-wrap
msgid "~h{, }"
msgstr ""

#. type: tbl table
#: ../goaccess.1:984
#, no-wrap
msgid "B<192.1.2.14\\~192.68.33.17\\~192.1.1.2>"
msgstr ""

#. type: tbl table
#: ../goaccess.1:984
#, no-wrap
msgid "~h{ }"
msgstr ""

#. type: Plain text
#: ../goaccess.1:997
msgid ""
"I<Note:> In order to get the average, cumulative and maximum time served in "
"GoAccess, you will need to start logging response times in your web "
"server. In Nginx you can add I<$request_time> to your log format, or I<%D> "
"in Apache."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1001
msgid ""
"I<Important:> If multiple time served specifiers are used at the same time, "
"the first option specified in the format string will take priority over the "
"other specifiers."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1005
msgid "GoAccess I<requires> the following fields:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1008
msgid "I<%h> a valid IPv4/6"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1011
msgid "I<%d> a valid date"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1014
msgid "I<%r> the request"
msgstr ""

#. type: SH
#: ../goaccess.1:1014
#, no-wrap
msgid "INTERACTIVE MENU"
msgstr ""

#. type: IP
#: ../goaccess.1:1015
#, no-wrap
msgid "F1 or h"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1017
msgid "Main help."
msgstr ""

#. type: IP
#: ../goaccess.1:1017
#, no-wrap
msgid "F5"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1019
msgid "Redraw main window."
msgstr ""

#. type: IP
#: ../goaccess.1:1019
#, no-wrap
msgid "q"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1021
msgid "Quit the program, current window or collapse active module"
msgstr ""

#. type: IP
#: ../goaccess.1:1021
#, no-wrap
msgid "o or ENTER"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1023
msgid "Expand selected module or open window"
msgstr ""

#. type: IP
#: ../goaccess.1:1023
#, no-wrap
msgid "0-9 and Shift + 0"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1025
msgid "Set selected module to active"
msgstr ""

#. type: IP
#: ../goaccess.1:1025
#, no-wrap
msgid "j"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1027
msgid "Scroll down within expanded module"
msgstr ""

#. type: IP
#: ../goaccess.1:1027
#, no-wrap
msgid "k"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1029
msgid "Scroll up within expanded module"
msgstr ""

#. type: IP
#: ../goaccess.1:1029
#, no-wrap
msgid "c"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1031
msgid "Set or change scheme color."
msgstr ""

#. type: IP
#: ../goaccess.1:1031
#, no-wrap
msgid "TAB"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1033
msgid "Forward iteration of modules. Starts from current active module."
msgstr ""

#. type: IP
#: ../goaccess.1:1033
#, no-wrap
msgid "SHIFT + TAB"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1035
msgid "Backward iteration of modules. Starts from current active module."
msgstr ""

#. type: IP
#: ../goaccess.1:1035
#, no-wrap
msgid "^f"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1037
msgid "Scroll forward one screen within an active module."
msgstr ""

#. type: IP
#: ../goaccess.1:1037
#, no-wrap
msgid "^b"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1039
msgid "Scroll backward one screen within an active module."
msgstr ""

#. type: IP
#: ../goaccess.1:1039
#, no-wrap
msgid "s"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1041
msgid "Sort options for active module"
msgstr ""

#. type: IP
#: ../goaccess.1:1041
#, no-wrap
msgid "/"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1043
msgid "Search across all modules (regex allowed)"
msgstr ""

#. type: IP
#: ../goaccess.1:1043
#, no-wrap
msgid "n"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1045
msgid "Find the position of the next occurrence across all modules."
msgstr ""

#. type: IP
#: ../goaccess.1:1045
#, no-wrap
msgid "g"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1047
msgid "Move to the first item or top of screen."
msgstr ""

#. type: IP
#: ../goaccess.1:1047
#, no-wrap
msgid "G"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1049
msgid "Move to the last item or bottom of screen."
msgstr ""

#. type: SH
#: ../goaccess.1:1049
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: SS
#: ../goaccess.1:1055
#, no-wrap
msgid "DIFFERENT OUTPUTS"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1059
msgid "To output to a terminal and generate an interactive report:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1061
msgid "# goaccess access.log"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1063
msgid "To generate an HTML report:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1065
msgid "# goaccess access.log -a -o report.html"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1067
msgid "To generate a JSON report:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1069
msgid "# goaccess access.log -a -d -o report.json"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1071
msgid "To generate a CSV file:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1073
msgid "# goaccess access.log --no-csv-summary -o report.csv"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1077
msgid ""
"GoAccess also allows great flexibility for real-time filtering and "
"parsing. For instance, to quickly diagnose issues by monitoring logs since "
"goaccess was started:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1079
msgid "# tail -f access.log | goaccess -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1087
msgid ""
"And even better, to filter while maintaining opened a pipe to preserve "
"real-time analysis, we can make use of I<tail -f> and a matching pattern "
"tool such as I<grep, awk, sed,> etc:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1089
msgid ""
"# tail -f access.log | grep -i --line-buffered 'firefox' | goaccess "
"--log-format=COMBINED -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1092
msgid ""
"or to parse from the beginning of the file while maintaining the pipe opened "
"and applying a filter"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1094
msgid ""
"# tail -f -n +0 access.log | grep -i --line-buffered 'firefox' | goaccess "
"--log-format=COMBINED -o report.html --real-time-html -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1096
msgid ""
"or to convert the log date timezone to a different timezone, e.g., "
"Europe/Berlin"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1098
msgid ""
"# goaccess access.log --log-format='%h %^[%x] \"%r\" %s %b \"%R\" \"%u\"' "
"--datetime-format='%d/%b/%Y:%H:%M:%S %z' --tz=Europe/Berlin --date-spec=min"
msgstr ""

#. type: SS
#: ../goaccess.1:1098
#, no-wrap
msgid "MULTIPLE LOG FILES"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1103
msgid ""
"There are several ways to parse multiple logs with GoAccess. The simplest is "
"to pass multiple log files to the command line:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1105
msgid "# goaccess access.log access.log.1"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1107
msgid "It's even possible to parse files from a pipe while reading regular files:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1109
msgid "# cat access.log.2 | goaccess access.log access.log.1 -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1113
msgid ""
"I<Note> that the single dash is appended to the command line to let GoAccess "
"know that it should read from the pipe."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1118
msgid ""
"Now if we want to add more flexibility to GoAccess, we can do a series of "
"pipes. For instance, if we would like to process all compressed log files "
"I<access.log.*.gz> in addition to the current log file, we can do:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1120
msgid "# zcat access.log.*.gz | goaccess access.log -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1123
msgid "I<Note:> On Mac OS X, use gunzip -c instead of zcat."
msgstr ""

#. type: SS
#: ../goaccess.1:1123
#, no-wrap
msgid "REAL TIME HTML OUTPUT"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1129
msgid ""
"GoAccess has the ability to output real-time data in the HTML report. You "
"can even email the HTML file since it is composed of a single file with no "
"external file dependencies, how neat is that!"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1133
msgid ""
"The process of generating a real-time HTML report is very similar to the "
"process of creating a static report. Only --real-time-html is needed to make "
"it real-time."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1135
msgid ""
"# goaccess access.log -o /usr/share/nginx/html/site/report.html "
"--real-time-html"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1139
msgid ""
"By default, GoAccess will use the host name of the generated report.  "
"Optionally, you can specify the URL to which the client's browser will "
"connect to. See https://goaccess.io/faq for a more detailed example."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1141
msgid "# goaccess access.log -o report.html --real-time-html --ws-url=goaccess.io"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1144
msgid ""
"By default, GoAccess listens on port 7890, to use a different port other "
"than 7890, you can specify it as (make sure the port is opened):"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1146
msgid "# goaccess access.log -o report.html --real-time-html --port=9870"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1149
msgid ""
"And to bind the WebSocket server to a different address other than 0.0.0.0, "
"you can specify it as:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1151
msgid "# goaccess access.log -o report.html --real-time-html --addr=127.0.0.1"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1157
msgid ""
"I<Note:> To output real time data over a TLS/SSL connection, you need to use "
"I<--ssl-cert=E<lt>cert.crtE<gt>> and I<--ssl-key=E<lt>priv.keyE<gt>.>"
msgstr ""

#. type: SS
#: ../goaccess.1:1157
#, no-wrap
msgid "WORKING WITH DATES"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1161
msgid "Another useful pipe would be filtering dates out of the web log"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1164
msgid ""
"The following will get all HTTP requests starting on 05/Dec/2010 until the "
"end of the file."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1166
msgid "# sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -a -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1168
msgid "or using relative dates such as yesterdays or tomorrows day:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1170
msgid ""
"# sed -n '/'$(date '+%d\\/%b\\/%Y' -d '1 week ago')'/,$ p' access.log | "
"goaccess -a -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1172
msgid ""
"If we want to parse only a certain time-frame from DATE a to DATE b, we can "
"do:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1174
msgid "# sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1178
msgid ""
"If we want to preserve only certain amount of data and recycle storage, we "
"can keep only a certain number of days. For instance to keep & show the last "
"5 days:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1180
msgid "# goaccess access.log --keep-last=5"
msgstr ""

#. type: SS
#: ../goaccess.1:1180
#, no-wrap
msgid "VIRTUAL HOSTS"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1185
msgid ""
"Assuming your log contains the virtual host (server blocks) field. For "
"instance:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1188
msgid ""
"vhost.com:80 10.131.40.139 - - [02/Mar/2016:08:14:04 -0600] \"GET "
"/shop/bag-p-20 HTTP/1.1\" 200 6715 \"-\" \"Apache (internal dummy "
"connection)\""
msgstr ""

#. type: Plain text
#: ../goaccess.1:1191
msgid ""
"And you would like to append the virtual host to the request in order to see "
"which virtual host the top urls belong to"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1193
msgid "awk '$8=$1$8' access.log | goaccess -a -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1195
msgid "To exclude a list of virtual hosts you can do the following:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1197
msgid "# grep -v \"`cat exclude_vhost_list_file`\" vhost_access.log | goaccess -"
msgstr ""

#. type: SS
#: ../goaccess.1:1197
#, no-wrap
msgid "FILES & STATUS CODES"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1202
msgid ""
"To parse specific pages, e.g., page views, html, htm, php, etc. within a "
"request:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1204
msgid "# awk '$7~/.html|.htm|.php/' access.log | goaccess -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1211
msgid ""
"Note, I<$7> is the request field for the common and combined log format, "
"(without Virtual Host), if your log includes Virtual Host, then you probably "
"want to use I<$8> instead. It's best to check which field you are shooting "
"for, e.g.:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1213
msgid "# tail -10 access.log | awk '{print $8}'"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1215
msgid "Or to parse a specific status code, e.g., 500 (Internal Server Error):"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1217
msgid "# awk '$9~/500/' access.log | goaccess -"
msgstr ""

#. type: SS
#: ../goaccess.1:1217
#, no-wrap
msgid "SERVER"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1222
msgid ""
"Also, it is worth pointing out that if we want to run GoAccess at lower "
"priority, we can run it as:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1224
msgid "# nice -n 19 goaccess -f access.log -a"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1227
msgid ""
"and if you don't want to install it on your server, you can still run it "
"from your local machine:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1229
msgid "# ssh -n root@server 'tail -f /var/log/apache2/access.log' | goaccess -"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1234
msgid ""
"Note: SSH requires I<-n> so GoAccess can read from stdin. Also, make sure to "
"use SSH keys for authentication as it won't work if a passphrase is "
"required."
msgstr ""

#. type: SS
#: ../goaccess.1:1234
#, no-wrap
msgid "INCREMENTAL LOG PROCESSING"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1239
msgid ""
"GoAccess has the ability to process logs incrementally through its internal "
"storage and dump its data to disk. It works in the following way:"
msgstr ""

#. type: IP
#: ../goaccess.1:1241
#, no-wrap
msgid "\\n[step]"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1245
msgid ""
"A dataset must be persisted first with I<--persist,> then the same dataset "
"can be loaded with"
msgstr ""

#. type: IP
#: ../goaccess.1:1245
#, no-wrap
msgid "\\n+[step]"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1249
msgid ""
"I<--restore.> If new data is passed (piped or through a log file), it will "
"append it to the original dataset."
msgstr ""

#. type: SH
#: ../goaccess.1:1252 ../goaccess.1:1287
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1258
msgid ""
"GoAccess keeps track of inodes of all the files processed (assuming files "
"will stay on the same partition), in addition, it extracts a snippet of data "
"from the log along with the last line parsed of each file and the timestamp "
"of the last line parsed. e.g., inode:29627417|line:20012|ts:20171231235059"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1265
msgid ""
"First it compares if the snippet matches the log being parsed, if it does, "
"it assumes the log hasn't changed dramatically, e.g., hasn't been "
"truncated. If the inode does not match the current file, it parses all "
"lines. If the current file matches the inode, it then reads the remaining "
"lines and updates the count of lines parsed and the timestamp. As an extra "
"precaution, it won't parse log lines with a timestamp ≤ than the one stored."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1269
msgid ""
"Piped data works based off the timestamp of the last line read. For "
"instance, it will parse and discard all incoming entries until it finds a "
"timestamp E<gt>= than the one stored."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1272
msgid "For instance:"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1274
msgid "// last month access log"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1276
msgid "# goaccess access.log.1 --persist"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1278
msgid "then, load it with"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1280
msgid "// append this month access log, and preserve new data"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1282
msgid "# goaccess access.log --restore --persist"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1284
msgid "To read persisted data only (without parsing new data)"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1286
msgid "# goaccess --restore"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1293
msgid ""
"Each active panel has a total of 366 items or 50 in the real-time HTML "
"report.  The number of items is customizable using I<max-items> Note that "
"HTML, CSV and JSON output allow a maximum number greater than the default "
"value of 366 items per panel."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1296
msgid ""
"A hit is a request (line in the access log), e.g., 10 requests = 10 "
"hits. HTTP requests with the same IP, date, and user agent are considered a "
"unique visit."
msgstr ""

#. type: Plain text
#: ../goaccess.1:1302
msgid ""
"If you want to enable dual-stack support, please use I<--addr=::> instead of "
"the default I<--addr=0.0.0.0.>"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1305
msgid ""
"The generated report will attempt to reconnect to the WebSocket server after "
"1 second with exponential backoff. It will attempt to connect 20 times."
msgstr ""

#. type: SH
#: ../goaccess.1:1305
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1309
msgid ""
"If you think you have found a bug, please send me an email to "
"I<goaccess@prosoftcorp.com> or use the issue tracker in "
"https://github.com/allinurl/goaccess/issues"
msgstr ""

#. type: SH
#: ../goaccess.1:1309
#, no-wrap
msgid "AUTHOR"
msgstr ""

#. type: Plain text
#: ../goaccess.1:1312
msgid ""
"Gerardo Orellana E<lt>hello@goaccess.ioE<gt> For more details about it, or "
"new releases, please visit https://goaccess.io"
msgstr ""
